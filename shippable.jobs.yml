jobs:   
  - name: runsh-min
    type: runSh
    allowPublicAccess: true
    runtime:
      container: false
    steps:
      - TASK:
          name: single-cmd-should-work
          script:
            - dir

  - name: windows-runsh-container-min
    type: runSh
    allowPublicAccess: false
    runtime:
      container: true
    steps:
      - IN: sample-gitRepo
      - TASK:
          name: say-hello-world
          runtime:
            options:
              imageName: "drydock/w16"
              imageTag: "master"
          script:
            - Write-Output "Hello world"
            - gci env:*
            - mkdir $env:USERPROFILE/xx
            - cd $env:USERPROFILE/xx
            - git clone https://github.com/scriptnull/node.git nodeRepo
            - cd ./nodeRepo/shipctl/x86_64/WindowsServer_2016
            - ./install.ps1
            - shipctl get_git_changes -path "$env:USERPROFILE/xx/nodeRepo" -commit-range "HEAD~1..HEAD"
            - shipctl get_git_changes -path "$env:USERPROFILE/xx/nodeRepo" -directories-only -commit-range "HEAD~1..HEAD"
            - shipctl get_git_changes -path "$env:USERPROFILE/xx/nodeRepo" -depth 1 -commit-range "HEAD~1..HEAD"
            - shipctl get_git_changes -path "$env:USERPROFILE/xx/nodeRepo" -depth 1 -directories-only -commit-range "HEAD~1..HEAD"
            - shipctl get_git_changes -path "$env:USERPROFILE/xx/nodeRepo" -depth 2 -commit-range "HEAD~1..HEAD"
            - shipctl get_git_changes -path "$env:USERPROFILE/xx/nodeRepo" -depth 2 -directories-only -commit-range "HEAD~1..HEAD"
            - shipctl get_git_changes -resource "sample-gitRepo"
            - shipctl get_git_changes -resource "sample-gitRepo" -depth 1
            - shipctl get_git_changes -resource "sample-gitRepo" -depth 2
            - shipctl get_git_changes -resource "sample-gitRepo" -directories-only
            - shipctl get_git_changes -resource "sample-gitRepo" -directories-only | ForEach-Object { echo "line is $_" }
            - shipctl get_git_changes -resource "sample-gitRepo" -directories-only | %{ echo "line is $_" }
            - shipctl get_git_changes -resource "sample-gitRepo" -directories-only | %{ 
            - shipctl get_git_changes -resource "sample-gitRepo" -directories-only -depth 1
            - shipctl get_git_changes -resource "sample-gitRepo" -directories-only -depth 2
            - dir

  - name: default-host
    type: runSh
    allowPublicAccess: true
    runtime:
      container: false
    steps:
      - TASK:
          name: say-hello-world
          script:
            - Write-Output "Hello world"

  - name: default-container
    type: runSh
    allowPublicAccess: true
    runtime:
      container: true
    steps:
      - TASK:
          name: say-hello-world
          runtime:
            options:
              imageName: "drydock/w16"
              imageTag: "master"
          script:
            - Write-Output "Hello world"
            
            
  - name: job-1
    type: runSh
    allowPublicAccess: true
    runtime:
      container: false
    steps:
      - TASK:
          name: add-file-to-state
          script:
            #- echo "hello and hi" | Out-File -Encoding utf8 -NoNewLine -File "$env:HOME/myfile.txt"
            - cat "$env:HOME/myfile.txt"
            - shipctl copy_file_to_state "$env:HOME/myfile.txt"
            - echo "hello"
            - dir
            
            
  - name: job-2
    type: runSh
    allowPublicAccess: true
    runtime:
      container: false
    steps:
      - IN: job-1
      - TASK:
          name: add-file-to-state
          script:
            - shipctl copy_file_from_resource_state "job-1" "myfile.txt" .
            - cat myfile.txt
            - echo "hello"
            - dir
